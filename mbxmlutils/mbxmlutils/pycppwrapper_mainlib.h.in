/*
 * Author: Markus Friedrich
 *
 * This file is free and unencumbered software released into the public domain.
 * 
 * Anyone is free to copy, modify, publish, use, compile, sell, or
 * distribute this software, either in source code form or as a compiled
 * binary, for any purpose, commercial or non-commercial, and by any
 * means.
 * 
 * In jurisdictions that recognize copyright laws, the author or authors
 * of this software dedicate any and all copyright interest in the
 * software to the public domain. We make this dedication for the benefit
 * of the public at large and to the detriment of our heirs and
 * successors. We intend this dedication to be an overt act of
 * relinquishment in perpetuity of all present and future rights to this
 * software under copyright law.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 * 
 * For more information, please refer to <http://unlicense.org/>
 */

#ifndef _MBXMLUTILS_PYCPPWRAPPER_MAINLIB_H_
#define _MBXMLUTILS_PYCPPWRAPPER_MAINLIB_H_

#include <string>
#include <tuple>
#ifndef _WIN32
#include <dlfcn.h>
#include <unistd.h>
#endif

namespace PythonCpp {

  inline std::tuple<std::string, std::string, bool> getPythonMainLib(const std::string &installPath) {
#ifdef _WIN32
    return {{}, {}, false};
#else
    auto globalSymbols = dlopen(nullptr, 0);
    bool pythonLoaded = dlsym(globalSymbols, "Py_InitializeEx");
    // dlclose(globalSymbols); not needed and not possible with dlopen(nullptr, ...)

    std::string PYMAINLIB("@PYTHON_MAINLIB@");
    auto i=PYMAINLIB.rfind('/');
    auto PYMAINLIBFILE=PYMAINLIB.substr(i+1);
    if(installPath.empty())
      return {PYMAINLIB.substr(0, i), PYMAINLIBFILE, pythonLoaded};
    if(access((installPath+"/lib/"+PYMAINLIBFILE).c_str(), 0)==0)
      return {installPath+"/lib", PYMAINLIBFILE, pythonLoaded};
    if(access((installPath+"/lib64/"+PYMAINLIBFILE).c_str(), 0)==0)
      return {installPath+"/lib64", PYMAINLIBFILE, pythonLoaded};
    return {PYMAINLIB.substr(0, i), PYMAINLIBFILE, pythonLoaded};
#endif
  }

}

#endif
