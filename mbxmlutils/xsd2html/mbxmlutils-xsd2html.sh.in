#! /bin/sh

if [ $# -lt 5 ]; then
  echo "Usage: mbxmlutils-xsd2html.sh <InXsdFile> <InDoxygenXmlDir> <FigureDir>"
  echo "                              <ProjectName> <DocygenPrefix>"
  echo "                              [<AddInXsdFile> ...]"
  echo "  InXsdFile: Input xsd file which should be converted to html"
  echo "  InDoxygenXmlDir: Directory of the Doxygen XML output of the"
  echo "                   corrospondending documentation"
  echo "  FigureDir: Colon separaded directory to search for figures (*.svg, *.png, *.jpg, *.jpeg)"
  echo "             These files are copied to the html output directory, hence name clashes must be avoided"
  echo "  ProjectName: The name of the Project (e.g. 'OpenMBV')"
  echo "  DoxygenPrefix: Prefix of doxygen names (e.g. 'OpenMBV::')"
  echo "  AddInXsdFile: Additional input xsd files (only used for generating example code"
  exit
fi

FILE=$1 #"/home/markus/project/MBSim/openmbv/schema/openmbv.xsd"
DOXYGENDOCDIR=$2 #"/home/markus/project/MBSim/openmbv/doc_/xml"
FIGUREDIR=$3
PROJECT=$4 #"OpenMBV"
DOXYGENCLASSPREFIX=$5 #"OpenMBV::"
shift 5
ADDFILES="$@"


if [ ! -e $FILE ]; then
  echo "Input file $FILE not found!"
  echo "You must install the package before you can generate the documentation."
  exit 1
fi


DOXYGENFUNCTIONPREFIX1="set"
DOXYGENFUNCTIONPREFIX2="add"
BASENAME=$(dirname $FILE)/$(basename $FILE .xsd)
BASENAME2=$(basename $FILE .xsd)
prefix=@prefix@

rm -f .$BASENAME2.done


if [ $DOXYGENDOCDIR != "none" ]; then
  echo "Combine Doxygen XML documentation"
  echo "  In file: $DOXYGENDOCDIR/index.xml"
  echo "  XSL file: $DOXYGENDOCDIR/combine.xslt"
  echo "  Out file: .$PROJECT.doxygen.xml"
  @XALAN@ -o .$PROJECT.doxygen.xml $DOXYGENDOCDIR/index.xml $DOXYGENDOCDIR/combine.xslt || exit 1
  echo "DONE"

  echo "Add Doxygen class and element function documentation to XML Schema"
  echo "  In file: $FILE"
  echo "  XSL file: @datadir@/@PACKAGE@/xsl/addDoxygenToXsd.xsl"
  echo "  Out file: $BASENAME.doxygen.xsd"
  @XALAN@ -o $BASENAME.doxygen.xsd \
    -p DOXYGENDOC "'$(pwd)/.$PROJECT.doxygen.xml'" \
    -p DOXYGENCLASSPREFIX "'$DOXYGENCLASSPREFIX'" \
    -p DOXYGENFUNCTIONPREFIX1 "'$DOXYGENFUNCTIONPREFIX1'" \
    -p DOXYGENFUNCTIONPREFIX2 "'$DOXYGENFUNCTIONPREFIX2'" \
    $FILE @datadir@/@PACKAGE@/xsl/addDoxygenToXsd.xsl || exit 1
  echo "DONE"
else
  echo "No Doxygen provided (argument = 'none'), just copy"
  cp $FILE $BASENAME.doxygen.xsd || exit 1
fi




HTMLDIR=$(sed -rne '/ targetNamespace *=/s|^.*targetNamespace *= *"([^"]+)".*$|\1|p' $BASENAME.doxygen.xsd | sed -re 's|\.|_|g;s|:|_|g;s|/|_|g')
echo "<root>" > addinput.xml
for F in $ADDFILES; do
  echo "<a>$F</a>" >> addinput.xml
done
echo "</root>" >> addinput.xml
echo "Generate HTML documentation"
echo "  In file: $BASENAME.doxygen.xsd"
echo "  XSL file: @datadir@/@PACKAGE@/xsl/xsdToHtml.xsl"
echo "  Out file: $HTMLDIR/index.html"
rm -rf $HTMLDIR
mkdir $HTMLDIR
@XALAN@ -o $HTMLDIR/index.html \
  -p PROJECT "'$PROJECT'" \
  -p DATETIME "'$(date -u +%FT%TZ)'" \
  -p PWD "'$PWD'" \
  $BASENAME.doxygen.xsd @datadir@/@PACKAGE@/xsl/xsdToHtml.xsl || exit 1
echo "DONE"
echo "Remove all namespace declaration from the html output using sed (maybe a bug in Xalan)"
sed -i -re "s/ xmlns:[^ ]+ *= *\"[^\"]+\"//g" $HTMLDIR/index.html || exit 1
echo "DONE"

echo "Copy *.svg"
for D in $(echo $FIGUREDIR | tr ':' ' '); do
  ls -1 $D/*.svg 2> /dev/null && cp -f $D/*.svg $HTMLDIR
  ls -1 $D/*.png 2> /dev/null && cp -f $D/*.png $HTMLDIR
  ls -1 $D/*.jpg 2> /dev/null && cp -f $D/*.jpg $HTMLDIR
  ls -1 $D/*.jpeg 2> /dev/null && cp -f $D/*.jpeg $HTMLDIR
done
echo "DONE"

echo "Check HTML documentation"
RET=0
$prefix/share/fmatvec/checkHtml/checkHtml.sh $HTMLDIR/index.html || RET=1
$prefix/share/fmatvec/checkHtml/checkMathJax.sh $HTMLDIR/index.html || RET=1
test $RET -ne 0 && exit 1
echo "DONE"

touch .$BASENAME2.done
